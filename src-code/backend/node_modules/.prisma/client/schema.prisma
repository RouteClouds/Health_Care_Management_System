generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Department {
  id          String   @id @default(cuid())
  name        String
  code        String   @unique
  description String?
  createdAt   DateTime @default(now())

  doctors Doctor[]

  @@map("departments")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  email     String   @unique
  password  String // Hashed with bcrypt
  firstName String
  lastName  String
  role      Role     @default(PATIENT)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  appointments Appointment[]

  @@map("users")
}

enum Role {
  PATIENT
  DOCTOR
  ADMIN
}

model Doctor {
  id              String   @id @default(cuid())
  firstName       String
  lastName        String
  email           String   @unique
  specialization  String
  departmentId    String
  qualifications  String[]
  experienceYears Int?
  consultationFee Float?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  department   Department    @relation(fields: [departmentId], references: [id])
  appointments Appointment[]

  @@map("doctors")
}

model Appointment {
  id        String            @id @default(cuid())
  patientId String
  doctorId  String
  dateTime  DateTime
  type      AppointmentType   @default(IN_PERSON)
  status    AppointmentStatus @default(SCHEDULED)
  notes     String?
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt

  patient User   @relation(fields: [patientId], references: [id])
  doctor  Doctor @relation(fields: [doctorId], references: [id])

  @@map("appointments")
}

enum AppointmentType {
  IN_PERSON
  TELEMEDICINE
}

enum AppointmentStatus {
  SCHEDULED
  COMPLETED
  CANCELLED
  NO_SHOW
}
