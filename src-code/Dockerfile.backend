# Node.js backend Dockerfile
FROM node:18-alpine AS base

# Install system dependencies including OpenSSL for Prisma
RUN apk add --no-cache \
    curl \
    postgresql-client \
    openssl \
    openssl-dev \
    && rm -rf /var/cache/apk/*

# Create app directory
WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S -D -H -u 1001 -h /app -s /sbin/nologin -G nodejs -g nodejs nodejs

# Copy package files
COPY backend/package*.json ./

# Install all dependencies (including dev dependencies for build)
RUN npm ci && npm cache clean --force

# Copy Prisma schema first for better caching
COPY backend/prisma ./prisma/

# Generate Prisma client
RUN npx prisma generate

# Copy source code
COPY backend/src ./src/
COPY backend/tsconfig.json ./
COPY backend/scripts ./scripts/

# Verify scripts are copied
RUN ls -la scripts/ && chmod +x scripts/*.sh

# Build TypeScript
RUN npm run build

# Remove dev dependencies and source files, but keep scripts
RUN npm prune --production && \
    rm -rf src tsconfig.json && \
    chmod +x scripts/*.sh && \
    chown -R nodejs:nodejs scripts/ && \
    ls -la scripts/

# Change ownership to nodejs user
RUN chown -R nodejs:nodejs /app

# Switch to non-root user
USER nodejs

# Expose port
EXPOSE 3002

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3002/health || exit 1

# Start the application
CMD ["npm", "start"]
